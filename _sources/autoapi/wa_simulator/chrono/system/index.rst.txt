:mod:`wa_simulator.chrono.system`
=================================

.. py:module:: wa_simulator.chrono.system

.. Module Contents
.. ---------------


.. raw:: html

   <h2>Classes</h2>

.. autoapisummary::
  :nosignatures:

  wa_simulator.chrono.system.WAChronoSystem

.. py:class:: WAChronoSystem(step_size: float = 0.003, render_step_size: float = 0.02, end_time: float = 120, contact_method: str = 'NSC', args: argparse.Namespace = None)

   Bases: :class:`wa_simulator.system.WASystem`

   Chrono system wrapper.

   Calls an update for the Chrono dynamics each :meth:`~advance` step.

   To instantiate a WAChronoSystem, you can either pass in various parameters directly, i.e. ``WAChronoSystem(step_size, render_step_size, ...)``
   or pass a ``argparse.Namespace`` in directly. This object is what is returned from :meth:`~WAArgumentParser.parse_args`.

   .. highlight:: python
   .. code:: python

       # Usage
       from wa_simulator.chrono import WAArgumentParser, WAChronoSystem

       # Passing values directly to the system
       system = WAChronoSystem(step_size=1e-3, render_step_size=2e-3, end_time=20, contact_method="SMC")

       # Or using WAArgumentParser
       parser = WAArgumentParser(use_sim_defaults=True)
       args = parser.parse_args()

       system = WAChronoSystem(args=args)

   :Parameters: * **step_size** (*double*) -- simulation step size. Defaults to 3e-3.
                * **render_step_size** (*double, optional*) -- render step size. Defaults to 2e-2.
                * **end_time** (*float, optional*) -- the end time for the simulation. Defaults to 120 seconds.
                * **args** (*argparse.Namespace, optional*) -- the output namespace from argparse (see explanation above)
                * **contact_method** (*str, optional*) -- the contact method to use (NSC or SMC). Defaults to "NSC".

   :raises TypeError: verify the contact method is a string

   .. method:: advance(self)

      Advance the simulation.

      Will update the dynamics of the chrono simulation







.. .. .. autoapi-nested-parse::
..
..    Wisconsin Autonomous - https://www.wisconsinautonomous.org

   Copyright (c) 2021 wisconsinautonomous.org
   All rights reserved.

   Use of this source code is governed by a BSD-style license that can be found
   in the LICENSE file at the top level of the repo

..
.. 